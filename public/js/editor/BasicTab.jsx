// @flow

import React, {Component} from 'react'
import {computed} from 'mobx'
import type ChartConfig from '../app/ChartConfig'
import {bind} from 'decko'
import * as _ from 'underscore'

function slugify(s) {
	s = s.toLowerCase().replace(/\s*\*.+\*/, '').replace(/[^\w- ]+/g,'');
	return $.trim(s).replace(/ +/g,'-');
}


export default class BasicTab extends Component {
	props: {
		chart: ChartConfig
	}

	get chart() : ChartConfig {
		return this.props.chart
	}

	lastTitle: string

	@bind
	onTitle(evt : SyntheticInputEvent) { 
		var currentTitle = this.lastTitle || this.chart.title || "";
		var currentExpectedSlug = slugify(currentTitle);
		var currentSlug = this.chart.slug;

		// We only automatically update the slug to match title if it's an unpublished chart, to discourage changing them later
		// Also if the user manually enters a slug we should honour that and not change it
		if (!this.chart.isPublished && (_.isEmpty(currentSlug) || currentExpectedSlug == currentSlug)) {
			var slug = slugify(evt.target.value);
			this.chart.slug = slug
		}

		this.lastTitle = evt.target.value
		this.chart.title = evt.target.value 
	}

	@bind
	onSlug(evt : SyntheticInputEvent) { this.chart.slug = evt.target.value }

	@bind
	onSubtitle(evt : SyntheticInputEvent) { this.chart.subtitle = evt.target.value }

	@bind
	onChartType(evt : SyntheticInputEvent) { this.chart.type = evt.target.value }

	@bind
	onSource(evt : SyntheticInputEvent) { this.chart.sourceDesc = evt.target.value }

	@bind
	onNote(evt : SyntheticInputEvent) { this.chart.note = evt.target.value }

	@bind
	onInternalNotes(evt : SyntheticInputEvent) { this.chart.internalNotes = evt.target.value }

	render() {
		const { chart } = this

		return <div id="basic-tab" class="tab-pane active">
			<section>
				<h2>Title of the visualization</h2>
				<p class="form-section-desc">Never use specific countries or years since these can be changed by the viewer. Instead use <b>*time*</b> or <b>*country*</b> as placeholders. These will be interpreted by the grapher to match what is being looked at.</p>
				<input class="form-control input-lg .col-xs-12" placeholder="Title (shorter is better)" type="text" value={chart.title} onInput={this.onTitle}/>
				<div class="input-group">
					<span class="input-group-addon">/grapher/</span>
					<input class="form-control .col-xs-12" title="Human-friendly URL slug for this chart" type="text" value={chart.slug} onInput={this.onSlug}/>
				</div>
			</section>	
			<section>
				<h2>Subtitle of the visualization</h2>
				<textarea class="form-control input-lg .col-xs-12" placeholder="Briefly describe the context of the data" type="text" value={chart.subtitle} onInput={this.onSubtitle} />
	   		</section>
			<section class="chart-type-section">
				<h2>What type of chart</h2>
				<select class="form-control chart-type-select" onChange={this.onChartType} ref={el => el.value = chart.type}>
					<option value="" disabled>Select type</option>
					<option value="LineChart">Line Chart</option>
					<option value="SlopeChart">Slope Chart</option>
					<option value="ScatterPlot">Scatter Plot</option>
					<option value="StackedArea">Stacked Area</option>
					<option value="MultiBar">Multi Bar</option>
					<option value="HorizontalMultiBar">Horizontal Multi Bar</option>
					<option value="DiscreteBar">Discrete Bar</option>
				</select>
			</section>
			<section>
				<h2>Sources</h2>
				<textarea class="form-control input-lg .col-xs-12" placeholder="Override the autogenerated source names if needed" type="text" value={chart.sourceDesc} onInput={this.onSource}/>
			</section>
			<section>
				<h2>Footer note</h2>
				<textarea class="form-control input-lg .col-xs-12" placeholder="Any further relevant information e.g. adjustments or limitations" type="text" value={chart.note} onInput={this.onNote}/>
			</section>
			<section>						
				<h2>Internal author notes</h2>						
				<textarea class="form-control input-lg .col-xs-12" placeholder="WIP, needs review, etc" type="text" name="chart-notes" value={chart.internalNotes} onInput={this.onInternalNotes}/>
			</section>
		</div>
	}
}